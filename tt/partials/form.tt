[%#
--------------------------------------------------------------------------------
tt/partials/form.tt
--------------------------------------------------------------------------------
%]

<!-- Start Form -->
<form [% FILTER collapse %]
    [% UNLESS invisible %]class="callout"[% END %]
    [% IF id %]id="[% id %]"[% END %]
    action="[% action %]"
    data-abide
    novalidate
    method="[% UNLESS method %]POST[% ELSE %][% method %][% END %]"
    accept-charset="utf-8"
    autocomplete="off">
[%- END %]

[%~ IF name %]
    <h2 class="text-center">[% name %]</h2>
[%- END %]

[%~ IF onError %]
    <input type="hidden" name="onError" id="onError" value="[% onError %]">
[%- END %]

[%~ IF onSuccess %]
    <input [% FILTER collapse %]
        type="hidden"
        name="onSuccess"
        id="onSuccess"
        value="[% onSuccess %]">
    [%~ END %]
[%- END %]

[%~ IF onSuccessContinue %]
    <input [% FILTER collapse %]
        type="hidden"
        name="onSuccessContinue"
        id="onSuccessContinue"
        value="[% onSuccessContinue %]">
    [%~ END %]
[%- END %]

[%~ IF onSuccessFinish %]
    <input [% FILTER collapse %]
        type="hidden"
        name="onSuccessFinish"
        id="onSuccessFinish"
        value="[% onSuccessFinish %]">
    [%~ END %]
[%- END %]

[%~ IF onWarning %]
    <input [% FILTER collapse %]
        type="hidden"
        name="onWarning"
        id="onWarning"
        value="[% onWarning %]"
    [% END %]>
[%- END %]

[%~ UNLESS error # Initial State %]
    <div [% FILTER collapse %]
        data-abide-error
        class="alert callout"
        aria-live="assertive"
        style="display: none;">
    [%~ END %]

[%~ ELSE # Error State %]
    <div [% FILTER collapse %]
        data-abide-error
        class="alert callout"
        aria-live="assertive"
        role="alert"
        style="display: block;">
    [%~ END %]

[%- END -%]

        <p class="lead">
[%- FILTER collapse %]
<i class="fas fa-times"></i>
[% IF error_msg %]
[% error_msg %]
[% ELSE %]
There are errors in your input as indicated below. Please correct them and try
again.
[% END %]
[% END ~%]
        </p>
    </div>
    <br>

[%~ global.scripts.form = BLOCK -%]

<script id="formScript">
  $(function() {

    // Function to toggle visibility of floating labels on input fields
    function check_labels() {
      var label = $(this).prev('label');
      if (this.value !== '') {
        label.addClass('show');
      } else {
        label.removeClass('show');
      }
    }

    // Selector for inputs with floating labels
    var inputs =
      'input:text,textarea,input[type="email"],input[type="password"],select';

    // Check floating labels at page load
    $(inputs).each(check_labels);

    // Check floating labels on change events
    $(inputs).on('change keyup mouseup', check_labels);

    // Remove placeholder styling on select fields when a value is selected
    $('select').on('change', function() {
      this.removeAttribute('style');
    });

    if (typeof tinymce !== 'undefined' && tinymce.editors.length > 0) {

      // There are TinyMCE editors on the page, wait until TinyMCE is ready
      // before saving the form state.

      tinymce.PluginManager.add('readycheck', function(editor) {
        editor.on('init', function() {
          tinyMCE.triggerSave();
[% IF conf.jsDebug %]
          console.log('tinyMCE state saved');
[% END %]
          var origFormState =
            $('input, textarea, select')
              .not("[name='g-recaptcha-response']")
              .serialize();
        });
[% IF conf.jsDebug %]
          console.log('Original Form State:');
          console.log(origFormState);
[% END %]
      });

    } else {

      var origFormState = $('input, textarea, select')
        .not("[name='g-recaptcha-response']")
        .serialize();
[% IF conf.jsDebug %]
      console.log('Original Form State:');
      console.log(origFormState);
[%~ END %]

    }

    $('form').submit(function() {
[% IF conf.jsDebug %]
      console.log('form submit handler called');
[% END %]

      if (typeof tinymce !== 'undefined' && tinymce.editors.length > 0) {
        tinyMCE.triggerSave();
[% IF conf.jsDebug %]
        console.log('tinyMCE state saved');
[% END %]
      }

      origFormState =
        $('input, textarea, select')
          .not("[name='g-recaptcha-response']")
          .serialize();

    });

    window.addEventListener('beforeunload', function(e) {
[%~ IF conf.jsDebug %]
      console.log('window beforeunload handler called');
[%~ END %]
    if (typeof tinymce !== 'undefined' && tinymce.editors.length > 0) {
      tinyMCE.triggerSave();
[% IF conf.jsDebug %]
      console.log('tinyMCE state saved');
[% END %]
    }
      var currFormState =
        $('input, textarea, select')
          .not("[name='g-recaptcha-response']")
          .serialize();
[% IF conf.jsDebug %]
      console.log('Original Form State:');
      console.log(origFormState);
      console.log('Current Form State:');
      console.log(currFormState);
[% END %]
      if (currFormState != origFormState) {
        e.preventDefault();
        e.returnValue = null;
      }
    });

  });

</script>

[%~ END # global.scripts.form = BLOCK -%]
